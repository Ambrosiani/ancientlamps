-# = wrap_layout :application do
-#   - if environment? :pdf
-#     .region-intro
-#       %h1.region-intro-title= current_page.data.title
-#     .region-map{:data => { :map => current_page.data.title.slugify }}
-#   .cat-entry
-#     %header.cat-entry-header
-#       = partial "partials/intro_map", :locals => {:center => current_page.data.map_center}
-#       .cat-entry-header-titlebar
-#         .cat-entry-header-titlebar-inner
-#           %h1.cat-entry-title= current_page.data.title
-#     %article.cat-entry-content
-#       .cat-entry-content-inner
-#         = yield

- typology = current_page.data.hierarchy.map {|i| i.values }.flatten.join(" / ")
- code = current_page.data.hierarchy.map {|i| i.keys }.flatten.join(".")
- title = current_page.data.hierarchy.last.values.join
- cat = current_page.data.cat
- entries = current_page.data.cat.respond_to?(:each) ? cat : Array(cat)
- first = entries.first

= wrap_layout :application do
  .cat-entry
    %br
    %br
    %br
    %h1.cat-entry__title= "#{code} #{title}"
    .cat-entry__breadcrumbs-bar
      .cat-entry__breadcrumbs-bar__inner
        %h4.cat-entry__breadcrumbs-bar__text= typology
    %article.cat-entry__content
      .cat-entry__content__inner
        = yield
